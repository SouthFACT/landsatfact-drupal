<?php

/**
 * Implements hook menu
 */
function lsf_aoi_subscriptions_menu() {
    // adds ajax endpoint to set up aoi subscriptions
    $items['aoisub/ajax'] = array(
        'title' => 'AOI SUBSCRIPTION CALLBACK ENDPOINT',
        'type' => MENU_CALLBACK,
        'page callback' => '_lsf_aoi_subscription_handler',
        'access callback' => TRUE,
    );

    return $items;
}

/**
 * Implements hook_node_view
 *
 * Adds js files for aoi subscriptions. Adds nid to page javascript.
 */
function lsf_aoi_subscriptions_node_view($node, $view_mode, $langcode) {
    if ($node->type === 'aoi' && $view_mode === 'full') {
        $aoi_vars = array('aoi_subscription' => array('nid' => $node->nid));
        $node->content['#attached']['js'][] = array(
            'data' => $aoi_vars,
            'type' => 'setting',
        );

        $path = drupal_get_path('module', 'lsf_aoi_subscriptions') . '/aoi_subscription_button.js';
        $node->content['#attached']['js'][] = $path;
    }
}

/**
 * General purpose handler for managing subscriptions to AOI's
 */
function _lsf_aoi_subscription_handler() {
    if ($_REQUEST['type'] === 'subscription_add') {
        $result = _handle_user_subscribe($_POST['nid']);
    }

    drupal_json_output($result);
    exit();
}

function _handle_user_subscribe ($nid) {
    return _create_aoi_subscription_node($nid);
}

function _create_aoi_subscription_node ($nid) {
    global $user;

    // entity_create replaces the procedural steps in the first example of
    // creating a new object $node and setting its 'type' and uid property
    $values = array(
        'type' => 'aoi_subscription',
        'uid' => $user->uid,
        'status' => 1,
        'comment' => 0,
        'promote' => 0,
    );
    $entity = entity_create('node', $values);

    // The entity is now created, but we have not yet simplified use of it.
    // Now create an entity_metadata_wrapper around the new node entity
    // to make getting and setting values easier
    $ewrapper = entity_metadata_wrapper('node', $entity);

    // Using the wrapper, we do not have to worry about telling Drupal
    // what language we are using. The Entity API handles that for us.
    $ewrapper->title->set('AOI subscription for user');

    // Setting the value of an entity reference field only requires passing
    // the entity id (e.g., nid) of the entity to which you want to refer
    // Note that the entity id (e.g., nid) must be passed as an integer not a
    // string
    $entity->field_parent_aoi[LANGUAGE_NONE][] = array(
        'target_id' => intval($nid),
        'target_type' => 'node',
    );
    //    $ewrapper->parent_aoi->set(intval($ref_nid));

    // Now just save the wrapper and the entity
    // There is some suggestion that the 'true' argument is necessary to
    // the entity save method to circumvent a bug in Entity API. If there is
    // such a bug, it almost certainly will get fixed, so make sure to check.
    $ewrapper->save();
    return intval($nid);
        //    return 'success';
}
